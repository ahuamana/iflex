---
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import ThemeToggle from './ThemeToggle.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

---

<header class="header">
  <div class="container">
    <a href="/" class="logo">IFLEX<span class="logo-dot">.</span></a>
    <button class="mobile-menu-toggle" aria-label="Toggle menu">
      <span></span>
      <span></span>
      <span></span>
    </button>
    <nav class="nav">
      <a href="/" class="nav-link">{t('nav.home')}</a>
      <a href="#features" class="nav-link">{t('nav.aiAnalysis')}</a>
      <a href="#success-stories" class="nav-link">{t('nav.successStories')}</a>
      <a href="#early-access" class="nav-link highlight">{t('nav.earlyAccess')}</a>
     <ThemeToggle />
    </nav>
  </div>
</header>

<style>
  .header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    background: var(--bg-color);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    transition: background-color 0.3s ease;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .logo {
    font-size: 1.5rem;
    font-weight: 700;
    text-decoration: none;
    color: var(--text-color);
  }

  .logo-dot {
    color: var(--primary-color);
  }

  .nav {
    display: flex;
    gap: 2rem;
    align-items: center;
  }

  .nav-link {
    text-decoration: none;
    color: var(--text-color);
    font-weight: 500;
    transition: color 0.3s ease;
  }

  .nav-link:hover {
    color: var(--primary-color);
  }

  .highlight {
    background: linear-gradient(135deg, #2575fc, #2575fc);
    padding: 0.5rem 1rem;
    border-radius: 20px;
    color: white;
  }

  .highlight:hover {
    color: white;
    opacity: 0.9;
  }

  .language-selector {
    display: flex;
    gap: 0.5rem;
  }

  .lang-btn {
    background: none;
    border: none;
    color: var(--text-color);
    cursor: pointer;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    transition: background-color 0.3s ease;
  }

  .lang-btn:hover {
    background-color: var(--hover-color);
  }

  .mobile-menu-toggle {
    display: none;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
  }

  .mobile-menu-toggle span {
    display: block;
    width: 24px;
    height: 2px;
    background-color: var(--text-color);
    margin: 4px 0;
    transition: 0.3s;
  }

  @media (max-width: 768px) {
    .mobile-menu-toggle {
      display: block;
    }

    .nav {
      display: none;
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      background: var(--bg-color);
      padding: 1rem;
      flex-direction: column;
      align-items: stretch;
      gap: 1rem;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .nav.active {
      display: flex;
    }
  }
</style>
            <line x1="12" y1="1" x2="12" y2="3" />
            <line x1="12" y1="21" x2="12" y2="23" />
            <line x1="4.22" y1="4.22" x2="5.64" y2="5.64" />
            <line x1="18.36" y1="18.36" x2="19.78" y2="19.78" />
            <line x1="1" y1="12" x2="3" y2="12" />
            <line x1="21" y1="12" x2="23" y2="12" />
            <line x1="4.22" y1="19.78" x2="5.64" y2="18.36" />
            <line x1="18.36" y1="5.64" x2="19.78" y2="4.22" />
          </g>
          <mask class="moon" id="moon-mask">
            <rect x="0" y="0" width="100%" height="100%" fill="white" />
            <circle cx="24" cy="10" r="6" fill="black" />
          </mask>
        </svg>
      </button>
  </div>
</header>

<style>
  .language-selector {
    display: flex;
    gap: 0.5rem;
    background: var(--bg-color);
    padding: 0.25rem;
    border-radius: 20px;
    box-shadow: 0 2px 8px var(--shadow-color);
  }

  .lang-btn {
    background: none;
    border: none;
    padding: 0.5rem 0.75rem;
    border-radius: 15px;
    color: var(--text-color);
    cursor: pointer;
    font-weight: 500;
    transition: all 0.3s ease;
  }

  .lang-btn[data-lang="${lang}"] {
    background: linear-gradient(90deg, var(--gradient-start), var(--gradient-end));
    color: white;
    box-shadow: 0 2px 4px var(--shadow-color);
  }

  .theme-toggle {
    border: none;
    background: none;
    padding: 0.5rem;
    cursor: pointer;
    border-radius: 50%;
    transition: all 0.3s ease;
    color: var(--text-color);
  }

  .theme-toggle:hover {
    background: var(--bg-color);
    transform: scale(1.1);
  }

  .sun-and-moon {
    transition: transform 0.5s ease;
  }

  .sun {
    transform-origin: center;
    transition: transform 0.5s ease;
  }

  .sun-beams {
    transform-origin: center;
    transition: transform 0.5s ease, opacity 0.5s ease;
  }

  .moon > circle {
    transform-origin: center;
    transition: transform 0.5s ease;
  }

  [data-theme='dark'] .sun-and-moon {
    transform: rotate(180deg);
  }

  [data-theme='dark'] .sun {
    transform: scale(1.75);
  }

  [data-theme='dark'] .sun-beams {
    transform: rotate(45deg);
    opacity: 0;
  }

  [data-theme='dark'] .moon > circle {
    transform: translateX(-7px);
  }

  .header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .logo {
    font-size: 1.5rem;
    font-weight: 700;
    color: white;
    text-decoration: none;
    background: linear-gradient(135deg, var(--gradient-start), var(--gradient-end));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .nav {
    display: flex;
    gap: 2rem;
  }

  .nav-link {
    color: var(--text-color);
    text-decoration: none;
    font-weight: 500;
    transition: color 0.3s ease;
  }

  .nav-link {
    color: var(--text-color);
    text-decoration: none;
    font-weight: 500;
    transition: all 0.3s ease;
    position: relative;
    padding: 0.5rem 1rem;
  }

  .nav-link:hover {
    color: var(--primary-color);
    transform: translateY(-1px);
  }

  .nav-link::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 0;
    height: 2px;
    background: linear-gradient(90deg, var(--gradient-start), var(--gradient-end));
    transition: all 0.3s ease;
    transform: translateX(-50%);
  }

  .nav-link:hover::after {
    width: 100%;
  }

  .nav-link.highlight {
    background: linear-gradient(90deg, var(--gradient-start), var(--gradient-end));
    color: white;
    border-radius: 20px;
    padding: 0.5rem 1.5rem;
    margin-left: 1rem;
    box-shadow: 0 4px 15px var(--shadow-color);
  }

  .nav-link.highlight:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px var(--shadow-color);
  }

  .logo-dot {
    color: var(--secondary-color);
    font-size: 2rem;
    font-weight: 900;
  }

  .mobile-menu-toggle {
    display: none;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
  }

  .mobile-menu-toggle span {
    display: block;
    width: 25px;
    height: 2px;
    background-color: var(--text-color);
    margin: 5px 0;
    transition: 0.3s;
  }

  @media (max-width: 768px) {
    .mobile-menu-toggle {
      display: block;
    }

    .nav {
      position: fixed;
      top: 70px;
      left: 0;
      right: 0;
      background: var(--bg-color);
      padding: 1rem;
      flex-direction: column;
      align-items: center;
      gap: 1rem;
      transform: translateY(-100%);
      opacity: 0;
      transition: all 0.3s ease;
      pointer-events: none;
    }

    .nav.active {
      transform: translateY(0);
      opacity: 1;
      pointer-events: auto;
    }

    .mobile-menu-toggle.active span:nth-child(1) {
      transform: rotate(45deg) translate(5px, 5px);
    }

    .mobile-menu-toggle.active span:nth-child(2) {
      opacity: 0;
    }

    .mobile-menu-toggle.active span:nth-child(3) {
      transform: rotate(-45deg) translate(7px, -7px);
    }
  }
</style>

<script>
  import { setLanguage } from '../stores/languageStore';

  const mobileMenuToggle = document.querySelector('.mobile-menu-toggle') as HTMLElement;
  const nav = document.querySelector('.nav') as HTMLElement;
  const langButtons = document.querySelectorAll('.lang-btn');

  langButtons.forEach(btn => {
    btn.addEventListener('click', (e) => {
      const lang = (e.target as HTMLElement).dataset.lang;
      if (lang) {
        setLanguage(lang);
        window.location.reload();
      }
    });
  });

  if (mobileMenuToggle && nav) {
    mobileMenuToggle.addEventListener('click', () => {
      mobileMenuToggle.classList.toggle('active');
      nav.classList.toggle('active');
    });

    // Close mobile menu when clicking outside
    document.addEventListener('click', (e) => {
      if (!nav.contains(e.target as Node) && 
          !mobileMenuToggle.contains(e.target as Node) && 
          nav.classList.contains('active')) {
        nav.classList.remove('active');
        mobileMenuToggle.classList.remove('active');
      }
    });
  }
</script>
---
/**
 * ImageComparison Component
 * Displays an interactive slider-based comparison of good and poor posture
 */
import { getLangFromUrl, useTranslations } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<div class="image-comparison">
  <div class="comparison-container">
    <img 
      src="https://spinehealth.org/wp-content/uploads/2023/01/bad-posture.jpg" 
      alt="Person with back pain" 
      class="image before" 
      loading="lazy"
      onerror="this.onerror=null; this.src='https://via.placeholder.com/1200x800?text=Back+Pain+Image'"
    />
    <img 
      src="https://www.kensington.com/siteassets/blog/2021/04-april/woman-using-kensington-ergonomic-solutions-in-home-office.jpg?width=1200&height=627" 
      alt="Person with good posture" 
      class="image after" 
      loading="lazy"
      onerror="this.onerror=null; this.src='https://via.placeholder.com/1200x800?text=Good+Posture+Image'"
    />
    <div class="slider">
      <div class="slider-button">
        <svg width="30" height="30" viewBox="0 0 30 30">
          <path d="M10 7.5l5-5 5 5M10 22.5l5 5 5-5" stroke="#fff" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </div>
    </div>
    <div class="labels">
      <div class="label before">{t('problem.imageComparison.poorPosture')}</div>
      <div class="label after">{t('problem.imageComparison.goodPosture')}</div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const container = document.querySelector('.comparison-container');
    const slider = container.querySelector('.slider');
    const beforeImage = container.querySelector('.before');

    let isDragging = false;

    const getPositionX = (event) => {
      return event.type.includes('mouse') ? event.pageX : event.touches[0].clientX;
    };

    const setPositionX = (x) => {
      const containerBox = container.getBoundingClientRect();
      const containerWidth = containerBox.width;
      let position = Math.max(0, Math.min(x - containerBox.left, containerWidth));
      let percentage = (position / containerWidth) * 100;
      
      slider.style.left = `${percentage}%`;
      beforeImage.style.clipPath = `inset(0 ${100 - percentage}% 0 0)`;
    };

    const startDragging = (e) => {
      isDragging = true;
      container.classList.add('active');
    };

    const stopDragging = () => {
      isDragging = false;
      container.classList.remove('active');
    };

    const drag = (e) => {
      if (!isDragging) return;
      e.preventDefault();
      setPositionX(getPositionX(e));
    };

    slider.addEventListener('mousedown', startDragging);
    slider.addEventListener('touchstart', startDragging);

    document.addEventListener('mousemove', drag);
    document.addEventListener('touchmove', drag);

    document.addEventListener('mouseup', stopDragging);
    document.addEventListener('touchend', stopDragging);

    // Set initial position
    const containerBox = container.getBoundingClientRect();
    setPositionX(containerBox.width / 2);
  });
</script>

<style>
.image-comparison {
  max-width: 1200px;
  margin: 3rem auto;
  padding: 0 1rem;
}

.comparison-container {
  position: relative;
  width: 100%;
  aspect-ratio: 16/9;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
}

.image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.before {
  z-index: 1;
  clip-path: inset(0 0 0 0);
  filter: contrast(1.2) brightness(0.95) saturate(1.1);
}

.after {
  z-index: 0;
  filter: brightness(1.05);
}

.comparison-container::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(90deg, rgba(255, 107, 107, 0.15), transparent 50%);
  z-index: 1;
  pointer-events: none;
}

.slider {
  position: absolute;
  top: 0;
  left: 50%;
  width: 2px;
  height: 100%;
  background: #fff;
  z-index: 2;
  cursor: ew-resize;
  transform: translateX(-50%);
}

.slider-button {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 44px;
  height: 44px;
  background: var(--primary-color);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
}

.comparison-container.active .slider-button {
  background: var(--secondary-color);
}

.labels {
  position: absolute;
  bottom: 20px;
  left: 20px;
  right: 20px;
  z-index: 2;
  display: flex;
  justify-content: space-between;
  padding: 0;
}

.label {
  padding: 8px 16px;
  background: rgba(0, 0, 0, 0.95);
  color: white;
  border-radius: 20px;
  font-size: 0.9rem;
  font-weight: 700;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
  white-space: nowrap;
}

.label.before {
  color: #ff6b6b;
}

.label.after {
  color: #51cf66;
}

@media (max-width: 768px) {
  .comparison-container {
    aspect-ratio: 4/3;
  }
  
  .label {
    font-size: 0.8rem;
    padding: 6px 12px;
  }
}
</style>